<?php
/**
 * CategoryControllerTest.php
 * Copyright (C) 2016 thegrumpydictator@gmail.com
 *
 * This software may be modified and distributed under the terms of the
 * Creative Commons Attribution-ShareAlike 4.0 International License.
 *
 * See the LICENSE file for details.
 */

namespace Chart;

use TestCase;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2016-12-10 at 05:51:40.
 */
class CategoryControllerTest extends TestCase
{


    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    public function setUp()
    {
        parent::setUp();
    }

    /**
     * @covers       \FireflyIII\Http\Controllers\Chart\CategoryController::all
     * @dataProvider dateRangeProvider
     */
    public function testAll(string $range)
    {
        $this->be($this->user());
        $this->changeDateRange($this->user(), $range);
        $this->call('get', route('chart.category.all', [1]));
        $this->assertResponseStatus(200);
    }

    /**
     * @covers       \FireflyIII\Http\Controllers\Chart\CategoryController::currentPeriod
     * @dataProvider dateRangeProvider
     */
    public function testCurrentPeriod(string $range)
    {
        $this->be($this->user());
        $this->changeDateRange($this->user(), $range);
        $this->call('get', route('chart.category.current', [1]));
        $this->assertResponseStatus(200);
    }

    /**
     * @covers       \FireflyIII\Http\Controllers\Chart\CategoryController::frontpage
     * @dataProvider dateRangeProvider
     */
    public function testFrontpage(string $range)
    {
        $this->be($this->user());
        $this->changeDateRange($this->user(), $range);
        $this->call('get', route('chart.category.current', [1]));
        $this->assertResponseStatus(200);
    }

    /**
     * @covers \FireflyIII\Http\Controllers\Chart\CategoryController::reportPeriod
     */
    public function testReportPeriod()
    {
        $this->be($this->user());
        $this->call('get', route('chart.category.period', [1, '1', '20120101', '20120131']));
        $this->assertResponseStatus(200);
    }

    /**
     * @covers \FireflyIII\Http\Controllers\Chart\CategoryController::reportPeriodNoCategory
     */
    public function testReportPeriodNoCategory()
    {
        $this->be($this->user());
        $this->call('get', route('chart.category.period.no-category', ['1', '20120101', '20120131']));
        $this->assertResponseStatus(200);
    }

    /**
     * @covers \FireflyIII\Http\Controllers\Chart\CategoryController::specificPeriod
     * @dataProvider dateRangeProvider
     */
    public function testSpecificPeriod(string $range)
    {
        $this->be($this->user());
        $this->changeDateRange($this->user(), $range);
        $this->call('get', route('chart.category.specific', ['1', '2012-01-01']));
        $this->assertResponseStatus(200);
    }
}
